/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Models.Beans.AttendanceLogBean;
import Models.Beans.TenantBean;
import Models.DAOImplementation.AttendanceLogDAOImplementation;
import Models.DAOImplementation.TenantDAOImplementation;
import Models.DAOInterface.AttendanceLogDAOInterface;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Giodee
 */
public class TenantLoggingPanel extends javax.swing.JPanel {

    /**
     * Creates new form TenantLoggingPanel
     */
    private JPanel jPanel2;
    private AttendanceLogDAOInterface logdao = new AttendanceLogDAOImplementation();

    public TenantLoggingPanel() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(1000, 596));
        setPreferredSize(new java.awt.Dimension(1000, 596));
        setLayout(null);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        jLabel3.setText("Enter ID:");
        add(jLabel3);
        jLabel3.setBounds(310, 130, 170, 50);

        jTextField1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        add(jTextField1);
        jTextField1.setBounds(480, 120, 290, 60);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        jLabel2.setText("Password:");
        add(jLabel2);
        jLabel2.setBounds(300, 210, 180, 50);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel4.setText("(Tenant's Birthday: DDMM)");
        add(jLabel4);
        jLabel4.setBounds(310, 250, 160, 15);
        add(jPasswordField1);
        jPasswordField1.setBounds(480, 220, 290, 30);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/imcomingin.png"))); // NOI18N
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(350, 330, 170, 40);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/imgoingout.png"))); // NOI18N
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(540, 330, 170, 40);

        jButton1.setText("View As Admin");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(800, 483, 110, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/logging-tab-peg-clear-panel.png"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1000, 590);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:

        char c = evt.getKeyChar();
        String input = "";
        String trim1;
        String trim2;
        String re1 = "^[0-9]*$";
        int last;
        if (!jTextField1.getText().isEmpty()) {
            input = jTextField1.getText();
        }

        if (input.matches(re1)) { // number
            if (input.length() > 11) {
                trim1 = input.substring(0, input.length() - 1);
                input = trim1;
            }// more than 11 numbers

        } else {

            trim1 = input.substring(0, input.indexOf(c));//first to index of character;
            trim2 = input.substring(input.indexOf(c) + 1);
            input = trim1 + trim2;
        }

        jTextField1.setText(input);

        if (!jTextField1.getText().isEmpty() && !jPasswordField1.getText().isEmpty()) {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        this.removeAll();
        jPanel2 = new AdminLoggingPanelFinal();
        setJpanel();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        // in
        int tenantID = Integer.parseInt(jTextField1.getText());
        TenantDAOImplementation tdao = new TenantDAOImplementation();
        TenantBean bean = new TenantBean();
        bean = tdao.getTenantById(tenantID);

        SimpleDateFormat df = new SimpleDateFormat("ddMM");

        String birthday = df.format(bean.getBirthday());
        if (jPasswordField1.getText().equals(birthday)) {

            AttendanceLogBean alistout = new AttendanceLogBean();
            AttendanceLogBean alistin = new AttendanceLogBean();
            ArrayList<AttendanceLogBean> alist = new ArrayList<AttendanceLogBean>();
            alist = logdao.getAllAtendanceLogsByTenantID(tenantID);
            alistout = logdao.getLatestLogoutByTenant(tenantID);
            alistin = logdao.getLatestLoginByTenant(tenantID);

            if (bean.getFname() == null) {
                JOptionPane.showMessageDialog(null, "No tenant ID " + tenantID);

            } else if (alist.isEmpty()) {
                Calendar c = Calendar.getInstance();
                Timestamp time = new Timestamp(c.getTimeInMillis());

                AttendanceLogBean logbean = new AttendanceLogBean();
                logbean.setLog_tenantID(tenantID);
                logbean.setTimeLogged(time);
                logbean.setIsIn(true);

                if (logdao.addAttendanceLogDAOInterface(logbean)) {
                    JOptionPane.showMessageDialog(null, "You are now in.");
                }

            } else if (!alist.get(0).getIsIn()) {
                Calendar c = Calendar.getInstance();
                Timestamp time = new Timestamp(c.getTimeInMillis());

                AttendanceLogBean logbean = new AttendanceLogBean();
                logbean.setLog_tenantID(tenantID);
                logbean.setTimeLogged(time);
                logbean.setIsIn(true);

                if (logdao.addAttendanceLogDAOInterface(logbean)) {
                    JOptionPane.showMessageDialog(null, "You are now in.");
                }

            } else {
                JOptionPane.showMessageDialog(null, "You are not allowed to log in. Log out first before logging in again.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid password for tenant.");
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        int tenantid = Integer.parseInt(jTextField1.getText());

        System.out.println(tenantid);
        TenantDAOImplementation tdao = new TenantDAOImplementation();
        TenantBean bean = new TenantBean();
        bean = tdao.getTenantById(tenantid);

        SimpleDateFormat df = new SimpleDateFormat("ddMM");

        String birthday = df.format(bean.getBirthday());
        if (jPasswordField1.getText().equals(birthday)) {

            ArrayList<AttendanceLogBean> alist = new ArrayList<AttendanceLogBean>();
            AttendanceLogBean alistout = new AttendanceLogBean();
            AttendanceLogBean alistin = new AttendanceLogBean();
            alist = logdao.getAllAtendanceLogsByTenantID(tenantid);
            alistout = logdao.getLatestLogoutByTenant(tenantid);
            alistin = logdao.getLatestLoginByTenant(tenantid);

            if (bean.getFname() == null) {
                JOptionPane.showMessageDialog(null, "No tenant ID " + tenantid);
                //      jTextField1.setText("");
            } else if (alist.isEmpty()) {
                Calendar c = Calendar.getInstance();
                Timestamp time = new Timestamp(c.getTimeInMillis());

                AttendanceLogBean logbean = new AttendanceLogBean();
                logbean.setLog_tenantID(tenantid);
                logbean.setTimeLogged(time);
                logbean.setIsIn(false);

                if (logdao.addAttendanceLogDAOInterface(logbean)) {
                    JOptionPane.showMessageDialog(null, "You are now out.");
                }

            } else if (alist.get(0).getIsIn()) { // isIn = true

                System.out.println("true!");
                Calendar c = Calendar.getInstance();
                Timestamp time = new Timestamp(c.getTimeInMillis());

                AttendanceLogBean logbean = new AttendanceLogBean();
                logbean.setLog_tenantID(tenantid);
                logbean.setTimeLogged(time);
                logbean.setIsIn(false);

                if (logdao.addAttendanceLogDAOInterface(logbean)) {
                    JOptionPane.showMessageDialog(null, "You are now out.");
                }

            } else {
                JOptionPane.showMessageDialog(null, "You are not allowed to log out. Log in first before logging out."); // di balance yung log in
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid password for tenant. Please try again.");
        }


    }//GEN-LAST:event_jButton3ActionPerformed
    public void setJpanel() {
        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 600));
        this.add(jPanel2);
        jPanel2.setOpaque(true);
        jPanel2.setBounds(0, 45, 1000, 600);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
