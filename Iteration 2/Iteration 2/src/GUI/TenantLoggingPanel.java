/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

/**
 *
 * @author jao
 */
public class TenantLoggingPanel extends javax.swing.JPanel {

    /**
     * Creates new form LogginPanel
     */
    public TenantLoggingPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        jLabel2.setText("Date Label");
        add(jLabel2);
        jLabel2.setBounds(190, 210, 80, 16);

        jLabel3.setText("Time Label");
        add(jLabel3);
        jLabel3.setBounds(190, 250, 68, 16);

        jTextField1.setText("jTextField1");
        add(jTextField1);
        jTextField1.setBounds(140, 340, 170, 28);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/imgoingout.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(130, 420, 190, 40);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/imcomingin.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(130, 470, 190, 40);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Time - IN", "Time - OUT"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(400, 80, 540, 520);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/logging-tab-peg-edited.png"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1000, 650);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // out

        int col = 0;
        int row = jTable1.getSelectedRow();
        Object tenant = jTable1.getModel().getValueAt(row, 0);
        String tenantID = tenant.toString().substring(0, 1);
        System.out.println(tenantID);
        int tenantid = Integer.parseInt(tenantID);

        System.out.println(tenantid);
        TenantDAOImplementation tdao = new TenantDAOImplementation();
        TenantBean bean = new TenantBean();
        bean = tdao.getTenantById(tenantid);

        ArrayList<AttendanceLogBean> alist = new ArrayList<AttendanceLogBean>();
        AttendanceLogBean alistout = new AttendanceLogBean();
        AttendanceLogBean alistin = new AttendanceLogBean();
        alist = logdao.getAllAtendanceLogsByTenantID(tenantid);
        alistout = logdao.getLatestLogoutByTenant(tenantid);
        alistin = logdao.getLatestLoginByTenant(tenantid);

        if (bean.getFname() == null) {
            JOptionPane.showMessageDialog(null, "No tenant ID " + tenantid);
            //      jTextField1.setText("");
        } else if (alist.isEmpty()) {
            Calendar c = Calendar.getInstance();
            Timestamp time = new Timestamp(c.getTimeInMillis());

            AttendanceLogBean logbean = new AttendanceLogBean();
            logbean.setLog_tenantID(tenantid);
            logbean.setTimeLogged(time);
            logbean.setIsIn(false);

            logdao.addAttendanceLogDAOInterface(logbean);

            //      jTextField1.setText("");
            updateTable1();
        } else if (alist.get(0).getIsIn()) { // isIn = true

            System.out.println("true!");
            Calendar c = Calendar.getInstance();
            Timestamp time = new Timestamp(c.getTimeInMillis());

            AttendanceLogBean logbean = new AttendanceLogBean();
            logbean.setLog_tenantID(tenantid);
            logbean.setTimeLogged(time);
            logbean.setIsIn(false);

            logdao.addAttendanceLogDAOInterface(logbean);

            //       jTextField1.setText("");
            updateTable1();
        } else {
            JOptionPane.showMessageDialog(null, "You are not allowed to log out. Log in first before logging out."); // di balance yung log in
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // in

        int col = 0;
        int row = jTable1.getSelectedRow();
        Object tenant = jTable1.getModel().getValueAt(row, 0);
        String tenantID = tenant.toString().substring(0, 1);
        System.out.println(tenantID);
        int tenantid = Integer.parseInt(tenantID);

        TenantDAOImplementation tdao = new TenantDAOImplementation();
        TenantBean bean = new TenantBean();
        bean = tdao.getTenantById(tenantid);

        AttendanceLogBean alistout = new AttendanceLogBean();
        AttendanceLogBean alistin = new AttendanceLogBean();
        ArrayList<AttendanceLogBean> alist = new ArrayList<AttendanceLogBean>();
        alist = logdao.getAllAtendanceLogsByTenantID(tenantid);
        alistout = logdao.getLatestLogoutByTenant(tenantid);
        alistin = logdao.getLatestLoginByTenant(tenantid);

        if (bean.getFname() == null) {
            JOptionPane.showMessageDialog(null, "No tenant ID " + tenantid);

        } else if (alist.isEmpty()) {
            Calendar c = Calendar.getInstance();
            Timestamp time = new Timestamp(c.getTimeInMillis());

            AttendanceLogBean logbean = new AttendanceLogBean();
            logbean.setLog_tenantID(tenantid);
            logbean.setTimeLogged(time);
            logbean.setIsIn(true);

            logdao.addAttendanceLogDAOInterface(logbean);

            updateTable1();

        } else if (!alist.get(0).getIsIn()) {
            Calendar c = Calendar.getInstance();
            Timestamp time = new Timestamp(c.getTimeInMillis());

            AttendanceLogBean logbean = new AttendanceLogBean();
            logbean.setLog_tenantID(tenantid);
            logbean.setTimeLogged(time);
            logbean.setIsIn(true);

            logdao.addAttendanceLogDAOInterface(logbean);

            updateTable1();

        } else {
            JOptionPane.showMessageDialog(null, "You are not allowed to log in. Log out first before logging in again.");
        }

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
